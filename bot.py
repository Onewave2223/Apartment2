import os
import logging
from telegram import Update, Bot
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from apscheduler.schedulers.background import BackgroundScheduler
from pytz import utc  # Render —Ç—Ä–µ–±—É–µ—Ç —è–≤–Ω—ã–π pytz timezone

# üîê –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.environ.get("BOT_TOKEN")
CHAT_ID = os.environ.get("CHAT_ID")

# üß± –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ –∏ chat_id
if not TOKEN:
    raise ValueError("‚ùå BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω! –£–∫–∞–∂–∏ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")
if not CHAT_ID:
    raise ValueError("‚ùå CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω! –£–∫–∞–∂–∏ –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

try:
    CHAT_ID = int(CHAT_ID)
except ValueError:
    raise ValueError("‚ùå CHAT_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!")

ALLOWED_USERS = [CHAT_ID]  # –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å

# üßæ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

# ü§ñ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = Bot(token=TOKEN)

# üßπ –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
async def clear_chat(context: ContextTypes.DEFAULT_TYPE):
    try:
        updates = await bot.get_updates()
        for update in updates:
            if update.message and update.message.chat.id == CHAT_ID:
                await bot.delete_message(chat_id=CHAT_ID, message_id=update.message.message_id)
        logging.info("‚úÖ –ß–∞—Ç —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ —á–∞—Ç–∞: {e}")

# üîò –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id not in ALLOWED_USERS:
        await update.message.reply_text("‚õîÔ∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω.")
        return
    await update.message.reply_text("‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –û–∂–∏–¥–∞–µ–º –Ω–æ–≤—ã–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã...")

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))

    # ‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
    scheduler = BackgroundScheduler(timezone=utc)
    scheduler.add_job(lambda: app.create_task(clear_chat(None)), trigger='interval', days=7)
    scheduler.start()

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ–º –∫–æ–º–∞–Ω–¥—ã...")
    app.run_polling()
